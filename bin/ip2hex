#!/usr/bin/env python3

import ipaddress
import sys

def parse(val):
  prefix = None
  try:
    str_ip, str_prefix = val.split("/")
    prefix = int(str_prefix)
  except:
    str_ip = val

  ip = None
  if '.' in str_ip or ':' in str_ip:
    ip = ipaddress.ip_address(str_ip)
  else:
    b = bytearray.fromhex(str_ip)

    try:
      # TODO: move this under a flag
      # /proc/net/tcp6
      b[12], b[13], b[14], b[15] = b[15], b[14], b[13], b[12]
      b[8], b[9], b[10], b[11] = b[11], b[10], b[9], b[8]
      b[4], b[5], b[6], b[7] = b[7], b[6], b[5], b[4]
      b[0], b[1], b[2], b[3] = b[3], b[2], b[1], b[0]
    except:
      pass

    ip = ipaddress.ip_address(bytes(b))

  print(ip.exploded, ip.packed.hex())

  if prefix:
    net = ipaddress.ip_network(ip.exploded + "/" + str(prefix), False)
    print(net.exploded)
    print("/{}: {} {}".format(prefix, net.netmask, net.netmask.packed.hex()))

  print()

for arg in sys.argv[1:]:
  parse(arg)
