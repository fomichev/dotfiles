#!/bin/bash

set -e
set -x

function cleanup {
	set +e

	jack_control stop

	pkill qjackctl
	pkill alsa_out
	pkill guitarix
	pkill ardour5
	pkill -9 jackd
}
trap cleanup EXIT

CARDS=/proc/asound/cards

wait_for_card() {
	while :; do
		if grep -q "USB-Audio - Jam" $CARDS; then
			echo "hw:Jam"
			return
		elif grep -q "USB-Audio - M2" $CARDS; then
			echo "hw:M2"
			return
		fi

		echo "No card found, sleeping..." >&2
		sleep 1
	done
}

DEV_IN=$(wait_for_card)
if [ -z "$DEV_IN" ]; then
	echo "Sound card not found!"
	exit 1
fi

case "$DEV_IN" in
	hw:Jam)
		# Apogee Jam does not have an output, use system.
		DEV_OUT=hw:PCH
		JACK_MODE="--capture"
		JACK_RATE=48000
		JACK_NPERIODS=4
		JACK_PERIOD=128
		;;
	hw:M2)
		DEV_OUT=hw:M2
		JACK_MODE="--duplex"
		JACK_RATE=48000
		JACK_NPERIODS=3
		JACK_PERIOD=128
		;;
	*)
		echo "Unknown sound card!"
		exit 1
		;;
esac

echo "Using $DEV_IN -> $DEV_OUT"

pasuspender -- jackd -d alsa -d "$DEV_IN" \
	--rate $JACK_RATE \
	--nperiods $JACK_NPERIODS \
	--period $JACK_PERIOD \
	$JACK_MODE &

if [ "$DEV_OUT" = "hw:PCH" ]; then
	sleep 1
	alsa_out -d "$DEV_OUT" &
fi

sleep 1

guitarix -i system:capture_1 &
qjackctl &

sleep 3
jack_lsp -c

# M2
jack_connect "system:playback_1" "gx_head_fx:out_0" || :
jack_connect "system:playback_2" "gx_head_fx:out_1" || :

# Jam
jack_connect "alsa_out:playback_1" "gx_head_fx:out_0" || :
jack_connect "alsa_out:playback_2" "gx_head_fx:out_1" || :

wait
