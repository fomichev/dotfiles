#!/bin/sh

[ $# -eq 0 ] && exit

args=
variant=""
pager="| less -r"
pattern=

while [ $# -gt 0 ]; do
	if [ $(echo $1 | sed -e 's/^-//') = "$1" ]; then
		break
	else
		case $1 in
			--no-pager)
				pager=""
				;;

			--git)
				variant="git"
				;;
			--gnu)
				variant="gnu"
				;;
			*)
				args="$args $1"
				;;
		esac
		shift
	fi
done
pattern=$*

git_grep() {
	$(git rev-parse --show-toplevel &>/dev/null)
	[ ! $? -eq 0 ] && return

	opts=$(cat <<-END
		-n \
		-I \
		-E
		END)

	if [ -z "$pager" ]; then
		export GIT_PAGER=''
	else
		pager_opts="--color=always"
	fi

	exec git grep $opts $pager_opts $args "$pattern"
}

gnu_grep() {
	opts=$(cat <<-END
		--exclude '*.swp' \
		--exclude '*~' \
		--exclude '*.a' \
		--exclude '*.o' \
		--exclude tags \
		--exclude-dir 'ipkg-*' \
		--exclude-dir .deps \
		--exclude-dir autom4te.cache \
		--exclude-dir .git \
		--exclude-dir .hg \
		--exclude-dir .svn \
		--binary-files=without-match \
		--devices=skip \
		-n \
		-E \
		-R
		END)

	if [ -z "$pager" ]; then
		pager_opts="--color=never"
	else
		pager_opts="--color=always"
	fi

	exec sh -c "grep $opts $pager_opts $args '$pattern' . $pager" 2>/dev/null
}

case $variant in
	git) git_grep ;;
	gnu) gnu_grep ;;
	*) git_grep; gnu_grep ;;
esac
