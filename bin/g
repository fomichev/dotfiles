#!/bin/sh

usage() {
	cat <<END
Usage: g [options] [--] [pattern...]

Options:
  -s            Skip ~/.grc and ./.grc loading
  -l            Print only names of files containing matches
  -i            Ignore case
  -v            Invert match: select only non-matched lines
  -w            Match the pattern only at word boundary
  -p <pattern>  Search files that match given pattern
  -d <dir>      Search in specified directory

  -C            Same as -p '*.c'
  -H            Same as -p '*.h'
END
}

# Disable shell globbing
set -f

# Some kind of 'API' which can be safely used in .grc {{{
find_exclude() { [ -z "$find_excl_opts" ] && { find_excl_opts="-path '*/$1'"; } || { find_excl_opts="$find_excl_opts -o -path '*/$1'"; }; }
find_include() { [ -z "$find_incl_opts" ] && { find_incl_opts="-path '*/$1'"; } || { find_incl_opts="$find_incl_opts -o -path '*/$1'"; }; }
# }}}

find_excl_opts=''
find_incl_opts=''
grep_opts='-nI'

find_exclude '*~'
find_exclude '*.swp'
find_exclude '*.a'
find_exclude '*.o'
find_exclude '*.o.d'
find_exclude '*.o.cmd'
find_exclude '*.check.cmd'
find_exclude '*.install.cmd'

find_exclude '*.map'
find_exclude '*.dis'

find_exclude 'autom4te.cache/*'
find_exclude 'config.log'
find_exclude 'config.status'

find_exclude 'tags'
find_exclude 'ipkg-*'

find_exclude '.deps/*'
find_exclude '*.a.deps'

find_exclude '.git/*'
find_exclude '.hg/*'
find_exclude '.svn/*'

find_exclude 'modules.symbols'
find_exclude 'Module.symvers'
find_exclude 'debian/*'

find_exclude '*.po'
find_exclude '*.pot'

find_exclude 'cscope.out'

find_exclude '*.orig'
find_exclude '*.i'

find_exclude 'CMakeFiles/*'

find_dir='.'

if [ -t 1 ]; then
	[ -z $PAGER ] && { PAGER='less -r'; }

	pager="| $PAGER"
	grep_opts="$grep_opts --color=always"
else
	pager=
	grep_opts="$grep_opts --color=never"
fi

ARGS=`getopt slivwd:p:hHC "$@"`
[ ! $? -eq 0 ] && { exit $?; }
eval set -- $ARGS

load_rc=1

while true; do
	case "$1" in
	--)
		shift
		break
		;;

	-s)
		load_rc=0
		shift
		;;

	-l)
		grep_opts="$grep_opts -l"
		shift
		;;

	-w)
		grep_opts="$grep_opts -w"
		shift
		;;

	-i)
		grep_opts="$grep_opts -i"
		shift
		;;

	-v)
		grep_opts="$grep_opts -v"
		shift
		;;

	-p)
		find_include "$2"
		shift
		shift
		;;

	-d)
		find_dir="$2"
		shift
		shift
		;;

	-H)
		find_include "*.h"
		shift
		;;

	-C)
		find_include "*.c"
		shift
		;;

	*|-h)
		usage
		exit
		;;
	esac
done

if [ $load_rc -eq 1 ]; then
	[ -r ~/.grc ] && { . ~/.grc; }
	[ -r ./.grc ] && { . ./.grc; }
fi

grep_pattern="$@"

find_opts=''
[ -z "$find_incl_opts" ] && \
	{ find_opts="\( $find_excl_opts \) -prune -o \( -type f -print0 \)"; } || \
	{ find_opts="-type f \( $find_incl_opts \) -print0"; }

exec sh -c "find $find_dir $find_opts | xargs -0 grep $grep_opts -e \"$grep_pattern\" 2>/dev/null $pager"
