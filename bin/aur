#!/bin/bash

if [ $# -eq 0 ]; then
	set update update_aur update_python remove_orphaned foreign unmanaged_files adblock cleanup
fi

_() {
	sudo -E "$@"
}

unmanaged_files() {
	comm -23 <(find / \( \
		-path '/dev' -o \
		-path '/etc' -o \
		-path '/sys' -o \
		-path '/run' -o \
		-path '/tmp' -o \
		-path '/mnt' -o \
		-path '/srv' -o \
		-path '/proc' -o \
		-path '/boot' -o \
		-path '/home' -o \
		-path '/root' -o \
		-path '/media' -o \
		-path '/opt' -o \
		-path '/usr/share/.mono' -o \
		-path '/usr/share/mime' -o \
		-path '/usr/lib/udev/hwdb.bin' -o \
		-path '/usr/local/bin/bootloadHID' -o \
		-path '/usr/share/applications/mimeinfo.cache' -o \
		-path '/usr/share/glib-2.0/schemas/gschemas.compiled' -o \
		-path '/usr/share/icons/Adwaita/icon-theme.cache' -o \
		-path '/usr/share/icons/hicolor/icon-theme.cache' -o \
		-path '/usr/share/icons/HighContrast/icon-theme.cache' -o \
		-path '/usr/share/info/dir' -o \
		-path '/usr/lib/python3.6/site-packages' -o \
		-path '/usr/lib/python3.9/site-packages' -o \
		-path '/usr/lib/gdk-pixbuf-2.0/2.10.0/loaders.cache' -o \
		-path '/usr/lib/gio/modules/giomodule.cache' -o \
		-path '/usr/lib/graphviz/config6' -o \
		-path '/usr/lib/gtk-2.0/2.10.0/immodules.cache' -o \
		-path '/usr/lib/gtk-3.0/3.0.0/immodules.cache' -o \
		-path '/usr/lib/gtk-4.0/4.0.0/media/giomodule.cache' -o \
		-path '/usr/lib/gtk-4.0/4.0.0/printbackends/giomodule.cache' -o \
		-path '/usr/lib/locale/locale-archive' -o \
		-path '/var/db' -o \
		-path '/var/cache' -o \
		-path '/var/tmp' -o \
		-path '/var/lib' -o \
		-path '/var/log' -o \
		-path '/var/.updated' -o \
		-path '/var/cache/pacman' \) \
		-prune -o \
		-type f -print 2>/dev/null | sort -u) <(pacman -Qlq | sort -u)
}

foreign() {
	pacman -Qm
}

remove_orphaned() {
	yes | _ pacman -Rs $(pacman -Qqtd)
}

aur_for_each() {
	for d in $(ls -1); do
		echo "${d}:"
		(cd $d && eval "$@")
	done
}

aur_diff() {
	git fetch
	git diff $(git rev-parse --abbrev-ref HEAD) origin/$(git rev-parse --abbrev-ref HEAD)
}

aur_update() {
	git pull --rebase
}

aur_install() {
	makepkg -si --needed
}

update_aur() {
	if [ -z "$PS1" ]; then
		echo "Skipping AUR update for non-interactive shell"
	fi

	pushd ~/src/aur
	aur_for_each aur_diff
	aur_for_each aur_update
	aur_for_each aur_install
	popd
}

update_python() {
	pip3 install gphotos-sync
	pip3 install md2pdf
}

update() {
	yes | _ pacman -Syu
}

adblock() {
	local target=/etc/unbound/adservers.conf

	if [ ! -e "$target" ]; then
		echo "No $target, skipping unbound!"
		return
	fi

	curl -sS -L --compressed \
		"http://pgl.yoyo.org/adservers/serverlist.php?hostformat=unbound&showintro=0&mimetype=plaintext&useip=127.0.0.1" \
		| _ tee /etc/unbound/adservers.conf > /dev/null

	_ systemctl restart unbound.service
}

cleanup() {
	_ journalctl --vacuum-time=7d
	_ flatpak uninstall --unused || :
	yes | _ pacman -Scc
}

say() {
	tput setaf 1
	echo "$@"
	tput sgr0
}

for f in "$@"; do
	say "$f"
	$f
done
